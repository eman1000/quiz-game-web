{"version":3,"sources":["App/module/index.ts","store/reducers/index.ts","store/index.ts","components/Header/index.tsx","components/AuthenticatedRoute/index.tsx","components/UnauthenticatedRoute/index.tsx","routes/NotFound/index.tsx","routes/index.tsx","components/MatchNotification/index.tsx","App/index.tsx","serviceWorker.ts","index.tsx","components/MatchNotification/MatchNotification.module.scss","components/Page/index.tsx","components/Loader/index.tsx","routes/Home/module/actionConstants.ts","routes/Home/module/index.ts"],"names":["ACTION_HANDLERS","AUTH_USER","state","action","update","isAuthenticated","$set","payload","initialState","wsLink","WebSocketLink","uri","concat","window","location","host","options","reconnect","timeout","reconnectionAttempts","httpLink","createHttpLink","authLink","setContext","_","_ref","headers","token","localStorage","getItem","Object","objectSpread","authorization","x-token","logLink","onError","_ref2","graphQLErrors","operation","networkError","forward","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","value","extensions","code","console","log","removeItem","pathname","href","return","link","split","_ref3","query","definition","getMainDefinition","kind","client","ApolloClient","cache","InMemoryCache","combineReducers","app","arguments","length","handler","type","home","isServer","document","createElement","withRouter","props","_props$user","user","avatar","coins","gems","firstName","_useState","useState","_useState2","slicedToArray","numGamesPlayed","setNumGamesPlayes","_useState3","_useState4","isFreeChestActive","setIsFreeChestActive","current","pages","/","name","hasBack","category-details","categories","game-chest","free-chest","profile","play-room","pick-opponent","challeges","path","React","useEffect","theNumGamesPlayed","parseInt","freeChestCountDate","isActive","moment","react_default","a","className","src","onClick","history","push","disabled","ev","preventDefault","goBack","GET_PROFILE","gql","graphql","Component","component","rest","objectWithoutProperties","_rest$data","data","loading","error","getMe","Loader","message","hasOwnProperty","react_router","assign","render","to","UnauthenticatedRoute","queryString","parse","search","authUser","JSON","redirect","NotFound","Page","id","title","description","noCrawl","style","textAlign","margingTop","Homepage","Loadable","loader","Promise","all","__webpack_require__","e","then","bind","modules","Categories","GameChest","FreeChest","Profile","CategoryDetails","PlayRoom","PickOpponent","Challenges","Login","Logout","routes","TransitionGroup","CSSTransition","classNames","enter","exit","components_AuthenticatedRoute","exact","components_UnauthenticatedRoute","MatchNotification","styles","matchModal","container","UPDATE_LAST_SEEN","_templateObject","withApollo","setUser","requestedMatch","_useState5","_useState6","res","setItem","Date","now","add","toString","callback","delay","savedCallback","useRef","setInterval","clearInterval","useInterval","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","stop","components_Header","status","Boolean","hostname","match","createBrowserHistory","createLogger","diff","collapsed","middleware","thunk","routerMiddleware","composedEnhancers","compose","apply","applyMiddleware","myConnectRouter","connectRouter","store","createStore","rootReducer","Application","react","react_apollo_esm","es","react_router_dom","src_App","root","querySelector","navigator","serviceWorker","ready","registration","unregister","module","exports","defaultImage","children","_Users_emman_quiz_game_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","lang","itemscope","itemtype","schema","rel","meta","image","contentType","twitter","published","updated","category","tags","theTitle","substring","theDescription","theImage","metaTags","itemprop","content","property","getMetaTags","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","HomeReducer"],"mappings":"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","file":"static/js/main.effa3a0f.chunk.js","sourcesContent":["// LIBRARIES\nimport update from \"immutability-helper\";\nimport constants from \"./actionConstants\";\n\nconst {\n  AUTH_USER\n} = constants;\n\nexport function authUser() {\n  const token = localStorage.getItem(\"jwtToken\");\n  console.log(token)\n  if(!token){\n    return{\n      type:AUTH_USER,\n      payload:false\n    }\n  }else{\n    return{\n      type:AUTH_USER,\n      payload:true\n    }\n  }\n}\n\nfunction handleAuthUser(state, action){\n  return update(state,{\n    isAuthenticated:{\n      $set:action.payload\n    }\n  })\n}\n\nconst ACTION_HANDLERS = {\n  AUTH_USER:handleAuthUser\n\n};\n\nconst initialState = {\n  isAuthenticated: false\n};\n\nexport default function AppReducer(state = initialState, action) {\n  const handler = ACTION_HANDLERS[action.type];\n  return handler ? handler(state, action) : state;\n}\n","import { combineReducers } from \"redux\";\nimport { createHttpLink } from 'apollo-link-http';\nimport { onError } from \"apollo-link-error\"\nimport { InMemoryCache } from 'apollo-cache-inmemory';\n\nimport {ApolloClient} from \"apollo-client\";\n\n\nimport home from \"../../routes/Home/module\";\n\nimport app from \"../../App/module\";\n\nimport { setContext } from 'apollo-link-context';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { getMainDefinition } from \"apollo-utilities\";\nimport { split } from \"apollo-link\";\n\nconst wsLink = new WebSocketLink({\n  uri: `ws://${window.location.host}/graphql`,\n  options: {\n    reconnect: true,\n    timeout:1000000,\n    reconnectionAttempts:20\n    \n  },\n});\n\nconst httpLink = createHttpLink({\n  uri: '/graphql'\n\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('jwtToken');\n  // return the headers to the context so httpLink can read them\n  if(token){\n    return {\n      headers: {\n        ...headers,\n        authorization: token ? `Bearer ${token}` : \"\",\n        \"x-token\":token\n      }\n    }\n  }else{\n    return {...headers}\n  }\n\n});\n\nconst logLink = onError(({ graphQLErrors, networkError, operation, forward }) =>{\n  if (graphQLErrors) {\n    for (let err of graphQLErrors) {\n      // handle errors differently based on its error code\n      //@ts-ignore\n      switch (err.extensions.code) {\n        case 'UNAUTHENTICATED':\n        console.log('jjj')\n          // old token has expired throwing AuthenticationError,\n          // one way to handle is to obtain a new token and \n          // add it to the operation context\n          // const headers = operation.getContext().headers\n          // operation.setContext({\n          //   headers: {\n          //     ...headers,\n          //     \"x-token\": getNewToken(),\n          //   },\n          // });\n          // // Now, pass the modified operation to the next link\n          // // in the chain. This effectively intercepts the old\n          // // failed request, and retries it with a new token\n          localStorage.removeItem(\"jwtToken\");\n          console.log('jjj')\n          if(window.location.pathname !== \"/login\"){\n            window.location.href = \"/login\"\n          }\n          return forward(operation);\n        case 'FORBIDDEN':\n          console.log('jjj4444')\n            // old token has expired throwing AuthenticationError,\n            // one way to handle is to obtain a new token and \n            // add it to the operation context\n            // const headers = operation.getContext().headers\n            // operation.setContext({\n            //   headers: {\n            //     ...headers,\n            //     \"x-token\": getNewToken(),\n            //   },\n            // });\n            // // Now, pass the modified operation to the next link\n            // // in the chain. This effectively intercepts the old\n            // // failed request, and retries it with a new token\n            localStorage.removeItem(\"jwtToken\");\n            console.log('jjj')\n            if(window.location.pathname !== \"/login\"){\n              window.location.href = \"/login\"\n            }\n            return forward(operation);\n        // handle other errors\n        case 'ANOTHER_ERROR_CODE':\n          // ...\n      }\n    }\n  }\n})  // as any\n\nconst link = split(\n  // split based on operation type\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return (\n      definition.kind === 'OperationDefinition' &&\n      definition.operation === 'subscription'\n    );\n  },\n  wsLink,\n  httpLink,\n);\n\nexport const client = new ApolloClient({\n  link: logLink.concat(authLink.concat(link)),\n  cache: new InMemoryCache()\n});\n// export const client = new ApolloClient({\n//   link: createHttpLink({ uri: 'http://localhost:5000/graphql' }),\n//   cache: new InMemoryCache(),\n// });\n\nexport default combineReducers({\n  app,\n  home\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { connectRouter, routerMiddleware, LocationChangeAction, RouterState } from \"connected-react-router\";\nimport thunk from \"redux-thunk\";\nimport {createLogger} from \"redux-logger\";\nimport { createBrowserHistory, createMemoryHistory } from \"history\";\nimport rootReducer from \"./reducers\";\nimport { client } from \"./reducers\";\n\n// A nice helper to tell us if we're on the server\nexport const isServer = !(\n  typeof window !== \"undefined\" &&\n  window.document &&\n  window.document.createElement\n);\n\n\nexport default (url = \"/\") => {\n  // Create a history depending on the environment\n  const history = createBrowserHistory();\n\n  const enhancers = [];\n\n  // Dev tools are helpful\n  if (process.env.NODE_ENV === \"development\" && !isServer) {\n    const devToolsExtension = window['devToolsExtension'] as () => never;\n\n    if (typeof devToolsExtension === \"function\") {\n      enhancers.push(devToolsExtension());\n    }\n  }\n\n  // logger\n  const log = createLogger({ diff: true, collapsed: true });\n\n  //middleware\n  const middleware = [thunk, routerMiddleware(history)];\n  //if (process.env.NODE_ENV === \"development\"){\n    middleware.push(log);\n  //}\n\n  const composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n  );\n\n  // Do we have preloaded state available? Great, save it.\n  const initialState = !isServer ? window['__PRELOADED_STATE__'] : {};\n\n  // Delete it once we have it stored in a variable\n  if (!isServer) {\n    delete window['__PRELOADED_STATE__'];\n  }\n\n  // Create the store\n  const myConnectRouter = connectRouter(history) as any\n  const store = createStore(\n    myConnectRouter(rootReducer as any),\n    initialState,\n    composedEnhancers as any\n  );\n\n  return {\n    store,\n    history\n  };\n};\n","import React, { useState } from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { RouteComponentProps } from \"react-router\";\nimport moment from \"moment\";\nimport \"./Header.scss\";\nimport { IUser } from \"../../typings\";\n\ninterface IHeaderLinkProps {\n  to: string;\n  text: string;\n  isButton: boolean;\n  current: string;\n}\n\ntype IHeaderProps = RouteComponentProps & {\n  isAuthenticated: boolean;\n  user: IUser;\n  current: string;\n};\n\nconst Header = (props: IHeaderProps) => {\n  const { avatar, coins, gems, firstName } = props.user;\n  const [numGamesPlayed, setNumGamesPlayes] = useState<number>(0);\n  const [isFreeChestActive, setIsFreeChestActive] = useState<boolean>(false);\n\n  console.log(\"Current\", props.current);\n  const pages = {\n    \"/\": {\n      name: \"Home\",\n      hasBack: false\n    },\n    \"category-details\": {\n      name: \"Category Details\",\n      hasBack: false\n    },\n    categories: {\n      name: \"Categories\",\n      hasBack: false\n    },\n    \"game-chest\": {\n      name: \"Game Chest\",\n      hasBack: false\n    },\n    \"free-chest\": {\n      name: \"Free Chest\",\n      hasBack: false\n    },\n    profile: {\n      name: \"Profile\",\n      hasBack: false\n    },\n    \"play-room\": {\n      name: \"Play Room\",\n      hasBack: false\n    },\n    \"pick-opponent\": {\n      name: \"Pick Opponent\",\n      hasBack: true\n    },\n    challeges: {\n      name: \"Challenges Opponent\",\n      hasBack: true\n    }\n  };\n  const path = props.current.split(\"/\")[1];\n  \n  React.useEffect(()=>{\n    if(typeof window != \"undefined\"){\n      const theNumGamesPlayed = window.localStorage.getItem(\"numGamesPlayed\");\n      if(theNumGamesPlayed != null){\n        setNumGamesPlayes(parseInt(theNumGamesPlayed))\n      }\n      const freeChestCountDate = window.localStorage.getItem(\"freeChestCountDate\");\n      if(freeChestCountDate != null){\n        //@ts-ignore\n        const isActive = moment(freeChestCountDate) < moment();\n        setIsFreeChestActive(isActive);\n      }\n    }\n  },[])\n  return (\n    <div className={\"header\"}>\n      {((props.current === \"/\" || (pages[path] && !pages[path].hasBack)) && (\n        <div className={\"profile\"}>\n          <div className={\"profile__top\"}>\n            <div className={\"profile__user\"}>\n              <img src={avatar} className={\"user__img\"} />\n              <div className={\"profile-name\"}>{firstName}</div>\n            </div>\n            <div className={\"profile__coins\"}>{coins}</div>\n          </div>\n          <div className={\"profile__bottom\"}>\n            <button\n              onClick={\n                ()=>props.history.push(\"/game-chest\")\n              }\n              disabled={(numGamesPlayed < 10) ? true : false}\n              className={`profile__game-chest ${(numGamesPlayed < 10) ? \"disabled\" : \"\" }`}>{numGamesPlayed}/10</button>\n            <button\n              onClick={\n                ()=>props.history.push(\"/free-chest\")\n              }\n              disabled={!isFreeChestActive ? true : false}\n              className={`profile__free-chest ${!isFreeChestActive ? \"disabled\" : \"\" }`}\n            >\n              unlock\n            </button>\n            <div className={\"profile__germs\"}>{gems}</div>\n          </div>\n        </div>\n      )) || (\n        <div>\n          <a\n            href=\"\"\n            onClick={ev => {\n              ev.preventDefault();\n              props.history.goBack();\n            }}\n            className={\"back\"}\n          />\n          <h3>{pages[path] && pages[path].name}</h3>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default withRouter(Header);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { Query, graphql } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport Loader from \"../../components/Loader\";\n\n\nexport const GET_PROFILE = gql(`\n  query {\n    getMe{\n      id\n      username\n      firstName\n      lastName\n      gender\n      age\n      email\n      role\n      facebookId\n      avatar,\n      coins,\n      gems\n    }\n  }\n`);\n\nconst AuthenticatedRoute = ({ component: Component, ...rest }) => {\n  const {loading, error, getMe } = rest.data;\n\n  useEffect(()=>{\n    return ()=>console.log(\"clear\")\n  },[])\n  if (loading) {\n    return <Loader/>\n  }\n  if (error) {\n    return <p>{error.message}</p>\n  }\n\n  const isAuthenticated = (getMe && getMe.hasOwnProperty(\"id\")) ? true : false;\n\n  return(\n    <Route\n      {...rest}\n      render={props =>(\n        <div>\n          {\n            isAuthenticated && \n            <Component {...props} user={getMe}  />\n          ||\n          <Redirect to={`/login?redirect=${window.location.pathname}`} />\n          }\n        </div>\n      )}\n    />\n  )\n};\n\nexport default (graphql(GET_PROFILE, {\n  //@ts-ignore\n})(AuthenticatedRoute));\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport queryString from \"query-string\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst UnauthenticatedRoute = ({ component: Component, ...rest }) => {\n  let query = queryString.parse(rest.location.search);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  //@ts-ignore\n  let authUser = JSON.parse(localStorage.getItem(\"authUser\"));\n\n  let authenticated = authUser ? authUser.hasOwnProperty(\"id\") : false; \n  return (\n    <Route\n      {...rest}\n      render={props =>\n        !isAuthenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={query.redirect as string || \"/\"} />\n        )\n      }\n    />\n  );\n};\n\n\nexport default UnauthenticatedRoute;\n","import React from \"react\";\nimport Page from \"../../components/Page\";\n\nexport default () => (\n  <Page\n    id=\"not-found\"\n    title=\"Not Found\"\n    description=\"This is embarrassing.\"\n    noCrawl\n  >\n    <div className=\"row\">\n      <div className=\"col-md-12 mx-auto\">\n        <h3 style={{textAlign:\"center\", margingTop:\"60px\"}}>404</h3>\n        <h1 style={{textAlign:\"center\"}}>Super embarrassing.</h1>\n      </div>\n    </div>\n    \n  </Page>\n);\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport AuthenticatedRoute from \"../components/AuthenticatedRoute\";\nimport UnauthenticatedRoute from \"../components/UnauthenticatedRoute\";\nimport Loadable from \"react-loadable\";\nimport { \n  CSSTransition, \n  TransitionGroup \n} from 'react-transition-group';\n\nimport NotFound from \"./NotFound\";\n\nconst Homepage = Loadable({\n  loader: () => import(/* webpackChunkName: \"homepage\" */ \"./Home/container/HomeContainer\"),\n  loading: () => null,\n  modules: [\"home\"]\n});\n\nconst Categories = Loadable({\n  loader: () => import(/* webpackChunkName: \"homepage\" */ \"./Categories/container/CategoriesContainer\"),\n  loading: () => null,\n  modules: [\"categories\"]\n});\n\nconst GameChest = Loadable({\n  loader: () => import(/* webpackChunkName: \"homepage\" */ \"./GameChest/container/GameChestContainer\"),\n  loading: () => null,\n  modules: [\"gameChest\"]\n});\n\nconst FreeChest = Loadable({\n  loader: () => import(/* webpackChunkName: \"homepage\" */ \"./FreeChest/container/FreeChestContainer\"),\n  loading: () => null,\n  modules: [\"freeChest\"]\n});\n\nconst Profile = Loadable({\n  loader: () => import(/* webpackChunkName: \"homepage\" */ \"./Profile/container/ProfileContainer\"),\n  loading: () => null,\n  modules: [\"profile\"]\n});\n\n\n\nconst CategoryDetails = Loadable({\n  loader: () => import(/* webpackChunkName: \"homepage\" */ \"./CategoryDetails/components/CategoryDetails\"),\n  loading: () => null,\n  modules: [\"categoryDetails\"]\n});\nconst PlayRoom = Loadable({\n  loader: () => import(/* webpackChunkName: \"homepage\" */ \"./PlayRoom/components/PlayRoom\"),\n  loading: () => null,\n  modules: [\"playRoom\"]\n});\nconst PickOpponent = Loadable({\n  loader: () => import(/* webpackChunkName: \"homepage\" */ \"./PickOpponent/components/PickOpponent\"),\n  loading: () => null,\n  modules: [\"pickOpponent\"]\n});\n\nconst Challenges = Loadable({\n  loader: () => import(/* webpackChunkName: \"homepage\" */ \"./Challenges/components/Challenges\"),\n  loading: () => null,\n  modules: [\"challenges\"]\n});\n\n\nconst Login = Loadable({\n  loader: () => import(/* webpackChunkName: \"homepage\" */ \"./Login/container/LoginContainer\"),\n  loading: () => null,\n  modules: [\"login\"]\n});\n\nconst Logout = Loadable({\n  loader: () => import(/* webpackChunkName: \"logout\" */ \"./Logout\"),\n  loading: () => null,\n  modules: [\"logout\"]\n});\n\n\nexport default () => (\n  <TransitionGroup>\n    <CSSTransition\n      classNames=\"page\"\n      timeout={{\n        enter: 1000,\n        exit: 1000,\n      }}\n    >\n    <Switch>\n      <AuthenticatedRoute exact path=\"/\" component={Homepage} />\n      <AuthenticatedRoute exact path=\"/category-details/:id\" component={CategoryDetails} />\n      <AuthenticatedRoute exact path=\"/categories\" component={Categories} />\n      <AuthenticatedRoute exact path=\"/game-chest\" component={GameChest} />\n      <AuthenticatedRoute exact path=\"/free-chest\" component={FreeChest} />\n      <AuthenticatedRoute exact path=\"/profile\" component={Profile} />\n      <AuthenticatedRoute exact path=\"/challenges\" component={Challenges} />\n\n\n      \n      <AuthenticatedRoute exact path=\"/play-room/:matchId\" component={PlayRoom} />\n\n      <AuthenticatedRoute exact path=\"/pick-opponent/:categoryId\" component={PickOpponent} />\n\n      <UnauthenticatedRoute exact path=\"/login\" component={Login} />\n      <AuthenticatedRoute exact path=\"/logout\" component={Logout} />\n\n      <Route component={NotFound} />\n    </Switch>\n    </CSSTransition>\n  </TransitionGroup>\n);\n","import React from \"react\";\nimport styles from \"./MatchNotification.module.scss\"\n\nexport default () => {\n  return(\n    <div className={styles.matchModal}>\n      <div className={styles.container}>\n        <h1>New challenge!</h1>\n        <button>Accept Match</button>\n      </div>\n    </div>\n  )\n}\n","// The basics\nimport React, { Component, useEffect, useRef, useState, useContext } from \"react\";\nimport { connect, MapStateToProps, MapStateToPropsParam } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { withRouter } from \"react-router\";\nimport { graphql, withApollo, Subscription } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport moment from \"moment\";\n\n\n\n// Action creators and helpers\nimport { authUser } from \"./module\";\nimport { isServer } from \"../store\";\n\nimport Header from \"../components/Header\";\nimport Routes from \"../routes\";\nimport ErrorHandler from \"../components/ErrorHandler\"\nimport { GET_PROFILE } from \"../components/AuthenticatedRoute\";\nimport MatchNotification from \"../components/MatchNotification\";\nimport { IUser } from \"../typings\";\nimport Footer from \"../components/Footer\";\n\nexport const MATCH_SUBSCRIPTION = gql(`\n  subscription($matchId: ID!){\n    matchUpdated(matchId:$matchId){\n      match{\n        id\n        status\n        matchUsers{\n          userId\n          matchId\n        }\n        results{\n          id\n          matchId\n          questionId\n          answerId\n          isCorrect\n          id\n        }\n      }\n    }\n  }\n`);\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      //@ts-ignore\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\nexport const App = (props)=>{\n    let [user, setUser] = useState<IUser | null>(null)\n    let [requestedMatch, setMatchUser] =  useState({})\n    let [count, setCount] = useState(0);\n    useEffect(()=>{\n      props.client.query({\n        query:GET_PROFILE,\n      }).then((res)=>{\n        const { getMe } = res.data;\n        setUser(getMe)\n      });\n\n      // props.data.subscribeToMore({\n      //   document: MATCH_SUBSCRIPTION,\n      //   variables: {\n      //     userId: user.id\n      //   },\n      //   updateQuery: (prev, {subscriptionData}) => {\n      //     if (!subscriptionData.data) {\n      //       return prev;\n      //     }\n      //     console.log(\"subscriptionData\", subscriptionData)\n      //     setMatchUser(subscriptionData.data.matchRequested.match)\n      //     return  {\n      //       matchRequested: subscriptionData.data.matchRequested.match\n      //     }\n      //   }\n      // });\n      if(typeof window != \"undefined\"){\n        \n        const freeChestCountDate = window.localStorage.getItem(\"freeChestCountDate\");\n        if(freeChestCountDate == null){\n          window.localStorage.setItem(\"freeChestCountDate\", moment(Date.now()).add(24, 'hours').toString());\n        }\n      }\n      return ()=>console.log(\"clear\")\n    },[])\n\n    \n    useInterval(async() => {\n      // // Your custom logic here\n      // console.log(\"user\", user)\n      // let lastSeen = await props.mutate({\n      //   variables:{\n      //     id:user.id,\n      //     date: new Date()\n      //   }\n      // });\n      // setCount(count + 1);\n      // console.log(\"last\")\n      // console.log(count)\n    }, 2000);\n\n    return (\n      <div>\n        {\n          user &&\n          //@ts-ignore\n          <Header\n            isAuthenticated={true}\n            current={window.location.pathname}\n            user={user}\n          />\n        }\n        <div id=\"content\">\n          {\n            //@ts-ignore\n            requestedMatch.status === \"pending\" &&\n            <MatchNotification/>\n          }\n          \n          <Routes />\n          {/* {\n            user &&\n            <Footer current={window.location.pathname}/>\n          } */}\n        </div>\n      </div>\n    );\n  }\n\nexport const UPDATE_LAST_SEEN = gql`\n  mutation updateUser($id: ID !, $date: Date){\n    updateUser(id:$id, lastSeen:$date){\n      lastSeen\n    }\n  }\n`;\n//export default withRouter(App);\nexport default (graphql(UPDATE_LAST_SEEN, {})(withRouter(withApollo(App))));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ApolloProvider } from 'react-apollo';\n\nimport createStore from './store';\nimport {client} from \"./store/reducers\"\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport \"./styles/home.scss\"\nimport \"./index.scss\"\n\n// Create a store and get back itself and its history object\nconst { store, history } = createStore();\n\n\nconst Application = (\n  <ApolloProvider client={client}>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    </Provider>\n  </ApolloProvider>\n);\n\nconst root = document.querySelector('#root')  as HTMLElement;\nrender(Application, root);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"matchModal\":\"MatchNotification_matchModal__1-3HC\",\"container\":\"MatchNotification_container__SkLWb\"};","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport Helmet from \"react-helmet\";\n\nconst SITE_URL =\n  process.env.NODE_ENV === \"development\"\n    ? \"http://localhost:3000\"\n    : \"app url\";\n\nconst FACEBOOK_APP_ID = \"XXXXXXXXX\";\n\nconst defaultTitle = \"Sam Media\";\nconst defaultDescription =\n  \"Sam Media\";\nconst defaultImage = `${SITE_URL}${\"\"}`;\nconst defaultTwitter = \"@sam-media\";\nconst defaultSep = \" | \";\n\nconst Page = (props)=> {\n  const getMetaTags = (\n    {\n      title,\n      description,\n      image,\n      contentType,\n      twitter,\n      noCrawl,\n      published,\n      updated,\n      category,\n      tags\n    },\n    pathname\n  ) =>{\n    const theTitle = title\n      ? (title + defaultSep + defaultTitle).substring(0, 60)\n      : defaultTitle;\n    const theDescription = description\n      ? description.substring(0, 155)\n      : defaultDescription;\n    const theImage = image ? `${SITE_URL}${image}` : defaultImage;\n\n    const metaTags = [\n      { itemprop: \"name\", content: theTitle },\n      { itemprop: \"description\", content: theDescription },\n      { itemprop: \"image\", content: theImage },\n      { name: \"description\", content: theDescription },\n      { name: \"twitter:card\", content: \"summary_large_image\" },\n      { name: \"twitter:site\", content: defaultTwitter },\n      { name: \"twitter:title\", content: theTitle },\n      { name: \"twitter:description\", content: theDescription },\n      { name: \"twitter:creator\", content: twitter || defaultTwitter },\n      { name: \"twitter:image:src\", content: theImage },\n      { property: \"og:title\", content: theTitle },\n      { property: \"og:type\", content: contentType || \"website\" },\n      { property: \"og:url\", content: SITE_URL + pathname },\n      { property: \"og:image\", content: theImage },\n      { property: \"og:description\", content: theDescription },\n      { property: \"og:site_name\", content: defaultTitle },\n      { property: \"fb:app_id\", content: FACEBOOK_APP_ID }\n    ];\n\n    if (noCrawl) {\n      metaTags.push({ name: \"robots\", content: \"noindex, nofollow\" });\n    }\n\n    if (published) {\n      metaTags.push({ name: \"article:published_time\", content: published });\n    }\n    if (updated) {\n      metaTags.push({ name: \"article:modified_time\", content: updated });\n    }\n    if (category) {\n      metaTags.push({ name: \"article:section\", content: category });\n    }\n    if (tags) {\n      metaTags.push({ name: \"article:tag\", content: tags });\n    }\n\n    return metaTags;\n  }\n\n  const { children, id, className, ...rest } = props;\n\n  return (\n    <div id={id} className={className}>\n      <Helmet\n        htmlAttributes={{\n          lang: \"en\",\n          itemscope: undefined,\n          itemtype: `http://schema.org/${rest.schema || \"WebPage\"}`\n        }}\n        title={\n          rest.title ? rest.title + defaultSep + defaultTitle : defaultTitle\n        }\n        link={[\n          {\n            rel: \"canonical\",\n            href: SITE_URL + props.location.pathname\n          }\n        ]}\n        meta={getMetaTags(rest as any, props.location.pathname)}\n      />\n      {children}\n    </div>\n  );\n}\n\n\nexport default withRouter(Page);\n","import React from \"react\";\nimport LoaderComponent from \"react-loaders\"\nimport \"./Loader.scss\";\n\nconst Loader = () =>{\n\n  return (\n    <div className=\"loader\">\n      \n      <div className={\"logo small\"}/>\n      <div className={\"loader\"}></div>\n      \n      {/* <LoaderComponent  active type=\"ball-clip-rotate\" /> */}\n    </div>\n\n  );\n};\n\nexport default Loader;\n","export default {\n  AUTH_USER:\"AUTH_USER\",\n};","// LIBRARIES\nimport update from \"immutability-helper\";\nimport queryString from \"query-string\";\nimport constants from \"./actionConstants\";\nimport axios, { AxiosRequestConfig } from \"axios\";\n\nconst {\n} = constants;\n\n\nconst ACTION_HANDLERS = {\n};\n\nconst initialState = {\n};\n\nexport default function HomeReducer(state = initialState, action) {\n  const handler = ACTION_HANDLERS[action.type];\n  return handler ? handler(state, action) : state;\n}\n"],"sourceRoot":""}